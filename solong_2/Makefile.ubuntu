# üêß Configuraci√≥n Espec√≠fica para Ubuntu
# Este archivo contiene configuraciones adicionales para Ubuntu

# Verificar que estamos en Ubuntu
ifneq ($(shell uname -s),Linux)
    $(error Este Makefile est√° configurado para Linux/Ubuntu)
endif

# Configuraci√≥n espec√≠fica para Ubuntu
UBUNTU_VERSION := $(shell lsb_release -rs 2>/dev/null || echo "unknown")
UBUNTU_CODENAME := $(shell lsb_release -cs 2>/dev/null || echo "unknown")

# Mostrar informaci√≥n del sistema
$(info üêß Sistema detectado: Ubuntu $(UBUNTU_VERSION) ($(UBUNTU_CODENAME)))

# Verificar dependencias cr√≠ticas
check_deps:
	@echo "üîç Verificando dependencias..."
	@dpkg -l | grep -q libx11-dev || (echo "‚ùå libx11-dev no instalado" && exit 1)
	@dpkg -l | grep -q libxext-dev || (echo "‚ùå libxext-dev no instalado" && exit 1)
	@dpkg -l | grep -q build-essential || (echo "‚ùå build-essential no instalado" && exit 1)
	@echo "‚úÖ Todas las dependencias est√°n instaladas"

# Instalar dependencias autom√°ticamente
install-deps:
	@echo "üì¶ Instalando dependencias para Ubuntu..."
	sudo apt update
	sudo apt install -y build-essential git
	sudo apt install -y libx11-dev libxext-dev libxrandr-dev libxss-dev libxcursor-dev libxinerama-dev libxi-dev libgl1-mesa-dev
	@echo "‚úÖ Dependencias instaladas"

# Verificar que minilibx est√° compilado
check-mlx:
	@echo "üîç Verificando minilibx..."
	@test -f minilibx/libmlx.a || (echo "‚ùå minilibx no compilado. Ejecuta: cd minilibx && make" && exit 1)
	@echo "‚úÖ minilibx est√° compilado"

# Compilar minilibx si es necesario
build-mlx:
	@echo "üî® Compilando minilibx..."
	@cd minilibx && make
	@echo "‚úÖ minilibx compilado"

# Compilaci√≥n completa con verificaciones
ubuntu-build: check_deps check-mlx
	@echo "üöÄ Compilando so_long para Ubuntu..."
	@$(MAKE) all

# Limpiar todo incluyendo minilibx
ubuntu-clean:
	@echo "üßπ Limpiando proyecto completo..."
	@$(MAKE) fclean
	@cd minilibx && make clean 2>/dev/null || true
	@echo "‚úÖ Limpieza completada"

# Recompilar todo desde cero
ubuntu-rebuild: ubuntu-clean build-mlx ubuntu-build

# Mostrar informaci√≥n del sistema
info:
	@echo "üêß Informaci√≥n del Sistema:"
	@echo "  OS: $(shell uname -s)"
	@echo "  Versi√≥n: $(shell uname -r)"
	@echo "  Ubuntu: $(UBUNTU_VERSION) ($(UBUNTU_CODENAME))"
	@echo "  Compilador: $(shell $(CC) --version | head -1)"
	@echo "  Arquitectura: $(shell uname -m)"
	@echo ""
	@echo "üìÅ Estructura del Proyecto:"
	@echo "  C√≥digo fuente: $(shell find src -name "*.c" | wc -l) archivos"
	@echo "  Headers: $(shell find includes -name "*.h" | wc -l) archivos"
	@echo "  Assets: $(shell find assets -type f | wc -l) archivos"
	@echo ""
	@echo "üéÆ Para ejecutar:"
	@echo "  ./so_long map.ber"

.PHONY: check_deps install-deps check-mlx build-mlx ubuntu-build ubuntu-clean ubuntu-rebuild info
